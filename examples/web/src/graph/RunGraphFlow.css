.react-flow {
  --bg-color: rgb(17, 17, 17);
  --text-color: rgb(243, 244, 246);
  --node-border-radius: 10px;
  --node-box-shadow: 10px 0 15px rgba(42, 138, 246, 0.3), -10px 0 15px rgba(233, 42, 103, 0.3);
  background-color: var(--bg-color);
  color: var(--text-color);
}

.react-flow__node.selected,
.react-flow__node.selected .cloud {
  box-shadow: var(--node-box-shadow);
}

.react-flow__node {
  border-radius: var(--node-border-radius);
  display: flex;
  /* height: 70px; */
  min-width: 150px;
  font-family: "Fira Mono", Monospace;
  font-weight: 500;
  letter-spacing: -0.2px;
}

.react-flow__node .outside {
  border-radius: var(--node-border-radius) var(--node-border-radius) 0 0;
  min-width: 150px;
  background:
    linear-gradient(90deg, #2a8af6 50%, transparent 0) repeat-x,
    linear-gradient(90deg, #2a8af6 50%, transparent 0) repeat-x,
    linear-gradient(0deg, #2a8af6 50%, transparent 0) repeat-y,
    linear-gradient(0deg, #2a8af6 50%, transparent 0) repeat-y;
  background-size:
    4px 2px,
    4px 2px,
    2px 4px,
    2px 4px;
  background-position:
    0 0,
    0 100%,
    0 0,
    100% 0;
}

@keyframes linearGradientMove {
  100% {
    background-position:
      -4px 0,
      4px 100%,
      0 4px,
      100% -4px;
  }
}

.react-flow__node .wrapper {
  overflow: hidden;
  display: flex;
  padding: 2px;
  position: relative;
  border-radius: var(--node-border-radius);
  flex-direction: column;
  width: 250px;
}

.gradient:before {
  content: "";
  position: absolute;
  padding-bottom: calc(100% * 2.41421356237);
  width: calc(100% * 2.41421356237);
  background: conic-gradient(
    from -160deg at 50% 50%,
    #e92a67 0deg,
    #a853ba 120deg,
    #2a8af6 240deg,
    #e92a67 360deg
  );
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 100%;
}

.react-flow__node .wrapper.gradient.processing:before {
  content: "";
  background: conic-gradient(
    from -160deg at 50% 50%,
    #e92a67 0deg,
    #a853ba 120deg,
    #2a8af6 240deg,
    rgba(42, 138, 246, 0) 360deg
  );
  animation: spinner 4s linear infinite;
  transform: translate(-50%, -50%) rotate(0deg);
}

@keyframes spinner {
  100% {
    transform: translate(-50%, -50%) rotate(-360deg);
  }
}

.react-flow__node .inner {
  background: var(--bg-color);
  padding: 16px 20px;
  border-radius: var(--node-border-radius);
  display: flex;
  flex-direction: column;
  justify-content: center;
  flex-grow: 1;
  position: relative;
}

.react-flow__node .icon {
  margin-right: 8px;
}

.react-flow__node .body {
  display: flex;
}

.react-flow__node .title {
  font-size: 16px;
  margin-bottom: 2px;
  line-height: 1;
}

.react-flow__node .subline {
  font-size: 11px;
  color: #777;
}

.react-flow__node .cloud {
  border-radius: 100%;
  width: 30px;
  height: 30px;
  right: 0;
  position: absolute;
  top: 0;
  transform: translate(50%, -50%);
  display: flex;
  transform-origin: center center;
  padding: 2px;
  overflow: hidden;
}

.react-flow__node .cloud div {
  background-color: var(--bg-color);
  flex-grow: 1;
  border-radius: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.react-flow__handle {
  opacity: 0;
}

.react-flow__handle.source {
  right: -10px;
}

.react-flow__handle.target {
  left: -10px;
}

.react-flow__node:focus {
  outline: none;
}

.react-flow__edge .react-flow__edge-path {
  stroke: url(#edge-gradient);
  stroke-width: 2;
  stroke-opacity: 0.75;
}

.react-flow__controls button {
  background-color: var(--bg-color);
  color: var(--text-color);
  border: 1px solid #95679e;
  border-bottom: none;
}

.react-flow__controls button:hover {
  background-color: rgb(37, 37, 37);
}

.react-flow__controls button:first-child {
  border-radius: 5px 5px 0 0;
}

.react-flow__controls button:last-child {
  border-bottom: 1px solid #95679e;
  border-radius: 0 0 5px 5px;
}

.react-flow__controls button path {
  fill: var(--text-color);
}

.react-flow__attribution {
  background: rgba(200, 200, 200, 0.2);
}

.react-flow__attribution a {
  color: #95679e;
}

/* Status indicators */
.status-indicator {
  display: flex;
  align-items: center;
  margin-bottom: 8px;
}

.status-badge {
  display: inline-block;
  padding: 2px 6px;
  border-radius: 9999px;
  font-size: 0.7rem;
  line-height: 1;
  font-weight: 500;
  margin-left: 6px;
}

/* Progress bars */
.progress-container {
  width: 100%;
  background-color: rgba(28, 35, 50, 0.6);
  border-radius: 9999px;
  height: 8px;
  margin: 8px 0;
}

.progress-bar {
  height: 100%;
  border-radius: 9999px;
  transition: width 0.3s ease;
}

.progress-bar.processing {
  background: linear-gradient(90deg, #2a8af6 0%, #a853ba 50%, #2a8af6 100%);
  background-size: 200% 100%;
  animation: progress-animation 2s infinite linear;
}

@keyframes progress-animation {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 200% 0%;
  }
}

/* Sub-task progress bars */
.subtask-progress {
  margin-bottom: 4px;
}

.subtask-progress .progress-container {
  height: 4px;
  opacity: 0.5;
}

/* Edge animations */
@keyframes flow-animation {
  0% {
    offset-distance: 0%;
  }
  100% {
    offset-distance: 100%;
  }
}

.data-particle {
  offset-path: path(attr(d));
  animation: flow-animation 2s linear infinite;
}

/* Graph visualization */
.mini-graph {
  position: relative;
  height: 120px;
  border: 1px solid rgba(80, 80, 80, 0.5);
  border-radius: 4px;
  margin-top: 8px;
  background: rgba(30, 30, 30, 0.8);
  overflow: hidden;
}

.mini-graph-node {
  position: absolute;
  padding: 4px 6px;
  border-radius: 4px;
  font-size: 0.65rem;
  border: 1px solid rgba(0, 0, 0, 0.1);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 80px;
  z-index: 10;
}

.mini-graph-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 5;
}

/* Output data display */
.output-data {
  margin-top: 8px;
  padding: 6px;
  background-color: rgba(70, 70, 70, 0.8);
  border-radius: 4px;
  font-size: 0.75rem;
  font-family: monospace;
  overflow: hidden;
  max-height: 80px;
  transition: max-height 0.3s ease;
}

.output-data:hover {
  max-height: 400px;
  overflow-y: auto;
}

/* Transitions */
.fade-in {
  animation: fade-in 0.3s ease-in-out;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
